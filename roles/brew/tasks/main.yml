---
- name: Install homebrew taps
  homebrew_tap: tap={{ item }} state=present
  with_items:
    - caskroom/cask
    - caskroom/versions

- name: Check time of last update
  command: git log -1 --format="%ct" HEAD
  args:
    chdir: /usr/local
  register: timestamp
  always_run: yes

- name: stat HOMEBREW_LIBRARY
  stat: path=/usr/local/Library
  register: library

- name: conditionally update homebrew
  homebrew: update_homebrew=yes
  when: ansible_date_time.epoch|int - timestamp.stdout|int > 60 * 60 * 24

- name: Install dev software with homebrew
  homebrew:
    name={{ item }}
    state=present
  with_items:
    - brew-cask
    - git
    - node
    - python
    - python3

- name: check for existing ~/.env file
  stat: path={{ ansible_env.HOME }}/.env follow=true
  register: env_file

- name: install ruby
  homebrew:
    name=ruby
    state=present
  with_items:
    - ruby

- name: set up ruby paths
  lineinfile: dest={{ ansible_env.HOME }}/.env
    line="RUBY_PATH=$(brew --prefix)/opt/ruby/bin ;
      if [ -d $RUBY_PATH ]; then
        export PATH=$RUBY_PATH:$PATH ;
      else if which rbenv > /dev/null ; then
        eval $(rbenv init -);
        fi ;
      fi"
  when: env_file.stat.exists
  tags:
    - dotfiles

- name: install go
  homebrew:
    name=go
    state=present

- name: set up GOPATH
  # Go Path (http://golang.org/doc/code.html#GOPATH)
  lineinfile: dest={{ ansible_env.HOME }}/.env
    line="if [ -d $HOME/.go ]; then
      export GOPATH=$HOME/.go ;
      export PATH=$PATH:$GOPATH/bin ;
    fi"
  tags:
    - dotfiles
  when: env_file.stat.exists

- name: set up GOROOT bin path
  lineinfile: dest={{ ansible_env.HOME }}/.env
    line="if [ -d $(brew --prefix)/opt/go/libexec/bin ]; then
      export PATH=$PATH:$(brew --prefix)/opt/go/libexec/bin ;
    fi"
  tags:
    - dotfiles
  when: env_file.stat.exists
