---
- name: include env specific vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "{{ default.yml }}"

- name: ensure ~/.dotfiles repo exists
  git:
    repo=git@github.com:bcomnes/ansible-dotfiles.git
    dest="{{ ansible_env.HOME }}/.dotfiles"
    update=yes
    # TODO: set update to no, and clone to true in 1.9

- name: symlink dotfiles
  file:
    src={{ item }}
    dest={{ ansible_env.HOME }}/.{{ item | basename }}
    state=link
  with_fileglob:
    - ./*

- name: symlink ssh files
  file:
    src={{ item }}
    dest={{ ansible_env.HOME }}/.ssh/{{ item | basename }}
    state=link
  with_fileglob:
    ./ssh/*

- name: generate authorized_keys
  authorized_key:
    user={{ ansible_ssh_user }}
    key="{{ item }}"
  with_file:
    - ./ssh/id_rsa.pub/bret-mbr.local.pub
    - ./ssh/id_rsa.pub/bret-win7.local.pub
    - ./ssh/id_rsa.pub/arc-mac-04.local.pub

- name: symlink htop files
  # htop_prefix varies from os family to family, namely darwin
  file: src={{ item }} dest={{ ansible_env.HOME }}/{{ htoprc_prefix }}{{ item | basename }} state=link
  with_fileglob:
    - ./config/htop/htoprc

- name: check for existing ~/.env file
  stat: path={{ ansible_env.HOME }}/.env follow=true
  register: env_file

- name: reset .env base file
  template: src=env.j2 dest={{ ansible_env.HOME }}/.env
  when: not env_file.stat.exists
